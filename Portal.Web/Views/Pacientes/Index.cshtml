@model GestaoSaudeIdosos.Web.ViewModels.PacientesIndexViewModel
@{ 
    ViewData["Title"] = "Pacientes";
}

<section class="page-header">
    <div>
        <h1>Pacientes</h1>
        <p class="page-subtitle">Acompanhe os idosos cadastrados e suas últimas atualizações.</p>
    </div>
    <a asp-action="Create" class="btn-primary" data-open-tab data-tab="Pacientes" data-url='@Url.Action("Create", "Pacientes")'>Novo paciente</a>
</section>

<form method="get" class="filters">
    <div class="filters__row">
        <div class="form-group">
            <label for="Busca">Buscar</label>
            <input type="text" id="Busca" name="Busca" value="@Model.Filtro.Busca" class="form-control" placeholder="Nome, CPF ou RG" />
        </div>
        <div class="form-group">
            <label for="ResponsavelId">Responsável</label>
            <select id="ResponsavelId" name="ResponsavelId" class="form-control">
                <option value="">Todos</option>
                @foreach (var responsavel in Model.Responsaveis)
                {
                    var selecionado = Model.Filtro.ResponsavelId.HasValue && responsavel.Value == Model.Filtro.ResponsavelId.Value.ToString();
                    <option value="@responsavel.Value" @(selecionado ? "selected" : null)>@responsavel.Text</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="ItensPorPagina">Itens por página</label>
            <select id="ItensPorPagina" name="ItensPorPagina" class="form-control">
                @{ var tamanhos = new[] { 10, 25, 50 }; }
                @foreach (var tamanho in tamanhos)
                {
                    <option value="@tamanho" @(Model.Filtro.ItensPorPagina == tamanho ? "selected" : null)>@tamanho</option>
                }
            </select>
        </div>
    </div>
    <input type="hidden" name="Pagina" value="1" />
    <div class="filters__actions">
        <button type="submit" class="btn-primary">Filtrar</button>
        <a asp-action="Index" class="btn-link">Limpar filtros</a>
    </div>
</form>

@if (Model.Paginacao.TotalRegistros == 0)
{
    <div class="empty-state">
        <p>Nenhum paciente encontrado com os filtros atuais.</p>
        <a asp-action="Create" class="btn-link" data-open-tab data-tab="Pacientes" data-url='@Url.Action("Create", "Pacientes")'>Cadastrar paciente</a>
    </div>
}
else
{
    var inicio = ((Model.Paginacao.PaginaAtual - 1) * Model.Paginacao.ItensPorPagina) + 1;
    var fim = Math.Min(Model.Paginacao.PaginaAtual * Model.Paginacao.ItensPorPagina, Model.Paginacao.TotalRegistros);

    <p class="table-summary">Exibindo @inicio - @fim de @Model.Paginacao.TotalRegistros registros.</p>

    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Paciente</th>
                    <th>Idade</th>
                    <th>Responsável</th>
                    <th>Cadastro</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @foreach (var paciente in Model.Registros)
            {
                var imagemPerfil = string.IsNullOrWhiteSpace(paciente.ImagemPerfil)
                    ? Url.Content("~/images/avatar-generico.svg")
                    : Url.Content(paciente.ImagemPerfil);

                <tr>
                    <td>@paciente.PacienteId</td>
                    <td>
                        <div class="table-avatar">
                            <img src="@imagemPerfil"
                                 alt="Foto de @paciente.NomeCompleto"
                                 class="avatar avatar-sm" />
                            <div class="table-avatar__info">
                                <strong>@paciente.NomeCompleto</strong>
                            </div>
                        </div>
                    </td>
                    <td>@paciente.Idade anos</td>
                    <td>@(string.IsNullOrEmpty(paciente.Responsavel) ? "-" : paciente.Responsavel)</td>
                    <td>@paciente.DataCadastro.ToString("dd/MM/yyyy")</td>
                    <td class="table-actions">
                        <a asp-action="Details" asp-route-id="@paciente.PacienteId" class="btn-link"
                               data-open-tab data-tab="Pacientes"
                           data-url='@Url.Action("Details", "Pacientes", new { id = paciente.PacienteId })'>Detalhes</a>
                        <a asp-action="Edit" asp-route-id="@paciente.PacienteId" class="btn-link"
                               data-open-tab data-tab="Pacientes"
                           data-url='@Url.Action("Edit", "Pacientes", new { id = paciente.PacienteId })'>Editar</a>
                        <a asp-action="Delete" asp-route-id="@paciente.PacienteId" class="btn-link text-danger"
                               data-open-tab data-tab="Pacientes"
                           data-url='@Url.Action("Delete", "Pacientes", new { id = paciente.PacienteId })'>Excluir</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    if (Model.Paginacao.TotalPaginas > 1)
    {
        <nav class="pagination-nav" aria-label="Paginação de pacientes">
            <ul class="pagination">
                <li class="page-item @(Model.Paginacao.PossuiPaginaAnterior ? string.Empty : "disabled")">
                    <a class="page-link" asp-action="Index"
                       asp-route-Pagina="@Model.Paginacao.PrimeiraPagina"
                       asp-route-Busca="@Model.Filtro.Busca"
                       asp-route-ResponsavelId="@Model.Filtro.ResponsavelId"
                       asp-route-ItensPorPagina="@Model.Filtro.ItensPorPagina">Primeira</a>
                </li>
                <li class="page-item @(Model.Paginacao.PossuiPaginaAnterior ? string.Empty : "disabled")">
                    <a class="page-link" asp-action="Index"
                       asp-route-Pagina="@Model.Paginacao.PaginaAnterior"
                       asp-route-Busca="@Model.Filtro.Busca"
                       asp-route-ResponsavelId="@Model.Filtro.ResponsavelId"
                       asp-route-ItensPorPagina="@Model.Filtro.ItensPorPagina">Anterior</a>
                </li>
                <li class="page-item disabled">
                    <span class="page-link">Página @Model.Paginacao.PaginaAtual de @Model.Paginacao.TotalPaginas</span>
                </li>
                <li class="page-item @(Model.Paginacao.PossuiProximaPagina ? string.Empty : "disabled")">
                    <a class="page-link" asp-action="Index"
                       asp-route-Pagina="@Model.Paginacao.ProximaPagina"
                       asp-route-Busca="@Model.Filtro.Busca"
                       asp-route-ResponsavelId="@Model.Filtro.ResponsavelId"
                       asp-route-ItensPorPagina="@Model.Filtro.ItensPorPagina">Próxima</a>
                </li>
                <li class="page-item @(Model.Paginacao.PossuiProximaPagina ? string.Empty : "disabled")">
                    <a class="page-link" asp-action="Index"
                       asp-route-Pagina="@Model.Paginacao.UltimaPagina"
                       asp-route-Busca="@Model.Filtro.Busca"
                       asp-route-ResponsavelId="@Model.Filtro.ResponsavelId"
                       asp-route-ItensPorPagina="@Model.Filtro.ItensPorPagina">Última</a>
                </li>
            </ul>
        </nav>
    }
}

@section Scripts {
    <script>
        (function () {
            const scriptElement = document.currentScript;
            const container = scriptElement ? scriptElement.closest(".conteudo") : null;
            const destino = "Pacientes";
            const urlDestino = `@Url.Action("Index", "Pacientes")`;

            if (!container || !container.id) {
                return;
            }

            const prefixo = "conteudo-";
            if (!container.id.startsWith(prefixo)) {
                return;
            }

            const abaAtual = container.id.substring(prefixo.length);
            if (abaAtual === destino) {
                return;
            }

            fecharAba(abaAtual);
            abrirAba(destino, urlDestino);
        })();
    </script>
}

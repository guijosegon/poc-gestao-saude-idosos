@model GestaoSaudeIdosos.Web.ViewModels.LoginViewModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Login";
}

@section Styles {
    <link rel="stylesheet" href="~/css/login.css" />
}

<div class="login-container">
    <div class="login-overlay" aria-hidden="true"></div>

    <div class="login-form" role="form" aria-labelledby="login-title">
        <form asp-action="Index" method="post" novalidate>
            @Html.AntiForgeryToken()
            <h2 id="login-title">Bem-vindo</h2>

            @Html.ValidationSummary(true, "", new { @class = "form-summary text-danger" })

            <div class="form-group has-tooltip">
                @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Email, new
                    {
                        @class = "form-control",
                        placeholder = "seuemail@exemplo.com",
                        autocomplete = "username",
                        inputmode = "email",
                        aria_describedby = "email-help"
                    })
                <small id="email-help" class="sr-only">Digite seu e-mail institucional</small>
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "field-validation-error" })
            </div>

            <div class="form-group has-tooltip password-wrapper">
                @Html.LabelFor(m => m.Senha, new { @class = "form-label" })
                @Html.PasswordFor(m => m.Senha, new
                    {
                        @class = "form-control",
                        placeholder = "Senha",
                        autocomplete = "current-password",
                        aria_describedby = "senha-help",
                        id = "Senha"
                    })
                <button type="button" class="toggle-password" aria-controls="Senha" aria-pressed="false" title="Mostrar/ocultar senha">üëÅ</button>
                <small id="senha-help" class="sr-only">Sua senha √© confidencial</small>
                @Html.ValidationMessageFor(m => m.Senha, "", new { @class = "field-validation-error" })
            </div>

            <button type="submit" class="btn-submit" id="btnEntrar">Entrar</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            const btn = document.querySelector('.toggle-password');
            const input = document.getElementById('Senha');
            if (btn && input) {
                btn.addEventListener('click', function () {
                    const isText = input.getAttribute('type') === 'text';
                    input.setAttribute('type', isText ? 'password' : 'text');
                    btn.setAttribute('aria-pressed', String(!isText));
                    btn.classList.toggle('active', !isText);
                });
            }

            const form = document.querySelector('.login-form form');
            const submit = document.getElementById('btnEntrar');
            if (form && submit) {
                form.addEventListener('submit', function () {
                    submit.disabled = true;
                    submit.textContent = 'Entrando...';
                });
            }
        })();
    </script>
}

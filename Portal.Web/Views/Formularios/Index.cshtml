@model GestaoSaudeIdosos.Web.ViewModels.FormulariosIndexViewModel
@{ 
    ViewData["Title"] = "Formulários";
}

<section class="page-header">
    <div>
        <h1>Biblioteca de formulários</h1>
        <p class="page-subtitle">Organize instrumentos clínicos com campos reutilizáveis e aplicáveis aos pacientes.</p>
    </div>
    <a asp-action="Create" class="btn btn-primary" data-open-tab data-tab="Formulários" data-url='@Url.Action("Create", "Formularios")'>Novo formulário</a>
</section>

<form method="get" class="filters" action="@Url.Action("Index", "Formularios")">
    <div class="filters__row">
        <div class="form-group">
            <label for="Busca">Buscar</label>
            <input type="text" id="Busca" name="Busca" value="@Model.Filtro.Busca" class="form-control" placeholder="Descrição do formulário" />
        </div>
        <div class="form-group">
            <label for="Ativo">Status</label>
            <select id="Ativo" name="Ativo" class="form-control">
                <option value="">Todos</option>
                <option value="true" @(Model.Filtro.Ativo == true ? "selected" : null)>Somente ativos</option>
                <option value="false" @(Model.Filtro.Ativo == false ? "selected" : null)>Somente inativos</option>
            </select>
        </div>
        <div class="form-group">
            <label for="ItensPorPagina">Itens por página</label>
            <select id="ItensPorPagina" name="ItensPorPagina" class="form-control">
                @{ var tamanhos = new[] { 10, 25, 50 }; }
                @foreach (var tamanho in tamanhos)
                {
                    <option value="@tamanho" @(Model.Filtro.ItensPorPagina == tamanho ? "selected" : null)>@tamanho</option>
                }
            </select>
        </div>
    </div>
    <input type="hidden" name="Pagina" value="1" />
    <div class="filters__actions">
        <button type="submit" class="btn btn-primary">Filtrar</button>
        <a asp-action="Index" class="btn btn-secondary filters__reset">Limpar filtros</a>
    </div>
</form>

@if (Model.Paginacao.TotalRegistros == 0)
{
    <div class="empty-state">
        <p>Nenhum formulário encontrado com os filtros atuais.</p>
        <a asp-action="Create" class="btn-link" data-open-tab data-tab="Formulários" data-url='@Url.Action("Create", "Formularios")'>Criar primeiro formulário</a>
    </div>
}
else
{
    var inicio = ((Model.Paginacao.PaginaAtual - 1) * Model.Paginacao.ItensPorPagina) + 1;
    var fim = Math.Min(Model.Paginacao.PaginaAtual * Model.Paginacao.ItensPorPagina, Model.Paginacao.TotalRegistros);

    <p class="table-summary">Exibindo @inicio - @fim de @Model.Paginacao.TotalRegistros registros.</p>

    <div class="card-grid">
    @foreach (var formulario in Model.Registros)
    {
        <article class="summary-card">
            <header>
                <h2>@formulario.Descricao</h2>
                <span class="status-badge @(formulario.Ativo ? "success" : "danger")">@(formulario.Ativo ? "Ativo" : "Inativo")</span>
            </header>
            <p class="summary-meta">@formulario.QuantidadeCampos campo(s) cadastrados</p>
            <p class="summary-meta">@formulario.QuantidadePacientes paciente(s) vinculados</p>
            <footer>
                <span>Criado em @formulario.DataCadastro.ToString("dd/MM/yyyy")</span>
                <div class="card-actions">
                    <a asp-action="Details" asp-route-id="@formulario.FormularioId" class="btn-link"
                           data-open-tab data-tab="Formulários"
                       data-url='@Url.Action("Details", "Formularios", new { id = formulario.FormularioId })'>Detalhes</a>
                    <a asp-action="Edit" asp-route-id="@formulario.FormularioId" class="btn-link"
                           data-open-tab data-tab="Formulários"
                       data-url='@Url.Action("Edit", "Formularios", new { id = formulario.FormularioId })'>Editar</a>
                    <a asp-action="Delete" asp-route-id="@formulario.FormularioId" class="btn-link text-danger"
                           data-open-tab data-tab="Formulários"
                       data-url='@Url.Action("Delete", "Formularios", new { id = formulario.FormularioId })'>Excluir</a>
                </div>
            </footer>
        </article>
    }
    </div>

    if (Model.Paginacao.TotalPaginas > 1)
    {
        <nav class="pagination-nav" aria-label="Paginação de formulários">
            <ul class="pagination">
                <li class="page-item @(Model.Paginacao.PossuiPaginaAnterior ? string.Empty : "disabled")">
                    <a class="page-link" asp-action="Index"
                       asp-route-Pagina="@Model.Paginacao.PrimeiraPagina"
                       asp-route-Busca="@Model.Filtro.Busca"
                       asp-route-Ativo="@Model.Filtro.Ativo"
                       asp-route-ItensPorPagina="@Model.Filtro.ItensPorPagina">Primeira</a>
                </li>
                <li class="page-item @(Model.Paginacao.PossuiPaginaAnterior ? string.Empty : "disabled")">
                    <a class="page-link" asp-action="Index"
                       asp-route-Pagina="@Model.Paginacao.PaginaAnterior"
                       asp-route-Busca="@Model.Filtro.Busca"
                       asp-route-Ativo="@Model.Filtro.Ativo"
                       asp-route-ItensPorPagina="@Model.Filtro.ItensPorPagina">Anterior</a>
                </li>
                <li class="page-item disabled">
                    <span class="page-link">Página @Model.Paginacao.PaginaAtual de @Model.Paginacao.TotalPaginas</span>
                </li>
                <li class="page-item @(Model.Paginacao.PossuiProximaPagina ? string.Empty : "disabled")">
                    <a class="page-link" asp-action="Index"
                       asp-route-Pagina="@Model.Paginacao.ProximaPagina"
                       asp-route-Busca="@Model.Filtro.Busca"
                       asp-route-Ativo="@Model.Filtro.Ativo"
                       asp-route-ItensPorPagina="@Model.Filtro.ItensPorPagina">Próxima</a>
                </li>
                <li class="page-item @(Model.Paginacao.PossuiProximaPagina ? string.Empty : "disabled")">
                    <a class="page-link" asp-action="Index"
                       asp-route-Pagina="@Model.Paginacao.UltimaPagina"
                       asp-route-Busca="@Model.Filtro.Busca"
                       asp-route-Ativo="@Model.Filtro.Ativo"
                       asp-route-ItensPorPagina="@Model.Filtro.ItensPorPagina">Última</a>
                </li>
            </ul>
        </nav>
    }
}

@section Scripts {
    <script>
        (function () {
            const scriptElement = document.currentScript;
            const container = scriptElement ? scriptElement.closest(".conteudo") : null;
            const destino = "Formularios";
            const urlDestino = `@Url.Action("Index", "Formularios")`;

            if (!container || !container.id) {
                return;
            }

            const prefixo = "conteudo-";
            if (!container.id.startsWith(prefixo)) {
                return;
            }

            const abaAtual = container.id.substring(prefixo.length);
            if (abaAtual === destino) {
                return;
            }

            fecharAba(abaAtual);
            abrirAba(destino, urlDestino);
        })();
    </script>
}

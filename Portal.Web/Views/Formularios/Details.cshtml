@model GestaoSaudeIdosos.Web.ViewModels.FormularioDetalheViewModel
@{
    ViewData["Title"] = "Detalhes do formulário";
}

<section class="page-header">
    <div>
        <h1>@Model.Descricao</h1>
        <p class="page-subtitle">Configuração do instrumento para aplicação aos pacientes.</p>
    </div>
    <div class="page-actions">
        <button type="button" class="btn-primary"
                data-aplicar-formulario
                data-formulario-id="@Model.FormularioId"
                data-formulario-descricao="@Model.Descricao"
                data-selecao-url='@Url.Action("SelecionarPaciente", "FormularioResultados")'
                data-aplicar-url='@Url.Action("Aplicar", "FormularioResultados")'>
            Aplicar formulário
        </button>
        <a asp-action="Edit" asp-route-id="@Model.FormularioId" class="btn-primary"
           data-open-tab data-tab="Formulário - @Model.Descricao"
           data-url='@Url.Action("Edit", "Formularios", new { id = Model.FormularioId })'>Editar</a>
        <a asp-action="Index" class="btn-secondary"
           data-open-tab data-close-current-tab data-tab="Formulários" data-url='@Url.Action("Index", "Formularios")'>Voltar</a>
    </div>
</section>

<div class="detail-grid">
    <article class="detail-card">
        <h2>Configuração</h2>
        <dl>
            <div>
                <dt>Responsável</dt>
                <dd>@(string.IsNullOrEmpty(Model.Responsavel) ? "—" : Model.Responsavel)</dd>
            </div>
            <div>
                <dt>Status</dt>
                <dd>
                    <span class="status-badge @(Model.Ativo ? "success" : "danger")">
                        @(Model.Ativo ? "Ativo" : "Inativo")
                    </span>
                </dd>
            </div>
        </dl>
        <div class="meta-info">
            <span>Criado em @Model.DataCadastro.ToString("dd/MM/yyyy")</span>
        </div>
    </article>

    <article class="detail-card">
        <h2>Campos do formulário</h2>
        <ul class="pill-list">
        @foreach (var campo in Model.Campos)
        {
            <li>
                <strong>@campo.Ordem. @campo.NomeCampo</strong>
                <span>@campo.Tipo • @(campo.Obrigatorio ? "Obrigatório" : "Opcional")</span>
            </li>
        }
        </ul>
    </article>
</div>

<article class="detail-card">
    <h2>Aplicações registradas</h2>
    @if (!Model.Aplicacoes.Any())
    {
        <p class="empty-state">Este formulário ainda não foi aplicado.</p>
    }
    else
    {
        <ul class="list">
        @foreach (var aplicacao in Model.Aplicacoes)
        {
            <li>
                <strong>@(string.IsNullOrWhiteSpace(aplicacao.Paciente) ? "Paciente não identificado" : aplicacao.Paciente)</strong>
                <span>@aplicacao.DataAplicacao.ToLocalTime().ToString("dd/MM/yyyy HH:mm") • @(string.IsNullOrWhiteSpace(aplicacao.Responsavel) ? "Aplicador não informado" : aplicacao.Responsavel)</span>
                <button type="button"
                        class="btn-link"
                        data-open-tab
                        data-tab="Formulário"
                        data-url='@Url.Action("Details", "FormularioResultados", new { id = aplicacao.FormularioResultadoId, abaOrigem = "Formulários", urlOrigem = Url.Action("Details", "Formularios", new { id = Model.FormularioId }) })'>Ver respostas</button>
            </li>
        }
        </ul>
    }
</article>
